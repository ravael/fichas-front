import { ElementRef, OnDestroy, OnInit, EventEmitter, Renderer2, SimpleChanges, OnChanges } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import Editor from './Editor';
import * as ɵngcc0 from '@angular/core';
export declare class NgxEditorComponent implements ControlValueAccessor, OnInit, OnChanges, OnDestroy {
    private renderer;
    constructor(renderer: Renderer2);
    ngxEditor: ElementRef;
    editor: Editor;
    outputFormat: 'doc' | 'html';
    placeholder: string;
    enabled: boolean;
    focusOut: EventEmitter<void>;
    focusIn: EventEmitter<void>;
    private subscriptions;
    private onChange;
    private onTouched;
    writeValue(value: Record<string, any> | string | null): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    private handleChange;
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NgxEditorComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NgxEditorComponent, "ngx-editor", never, { "placeholder": "placeholder"; "enabled": "enabled"; "outputFormat": "outputFormat"; "editor": "editor"; }, { "focusOut": "focusOut"; "focusIn": "focusIn"; }, never, never>;
}

//# sourceMappingURL=editor.component.d.ts.map