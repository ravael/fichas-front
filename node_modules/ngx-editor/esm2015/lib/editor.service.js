import { Injectable, Optional } from '@angular/core';
import Locals from './Locals';
import * as i0 from "@angular/core";
export class NgxEditorServiceConfig {
    constructor() {
        this.locals = {};
    }
}
NgxEditorServiceConfig.ɵprov = i0.ɵɵdefineInjectable({ factory: function NgxEditorServiceConfig_Factory() { return new NgxEditorServiceConfig(); }, token: NgxEditorServiceConfig, providedIn: "root" });
NgxEditorServiceConfig.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root'
            },] }
];
export class NgxEditorService {
    constructor(config) {
        this.config = config;
    }
    get locals() {
        return new Locals(this.config.locals);
    }
}
NgxEditorService.ɵprov = i0.ɵɵdefineInjectable({ factory: function NgxEditorService_Factory() { return new NgxEditorService(i0.ɵɵinject(NgxEditorServiceConfig, 8)); }, token: NgxEditorService, providedIn: "root" });
NgxEditorService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root'
            },] }
];
NgxEditorService.ctorParameters = () => [
    { type: NgxEditorServiceConfig, decorators: [{ type: Optional }] }
];
export const provideMyServiceOptions = (config) => {
    var _a;
    return {
        locals: (_a = config.locals) !== null && _a !== void 0 ? _a : {}
    };
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZWRpdG9yLnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvbGliL2VkaXRvci5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBR3JELE9BQU8sTUFBTSxNQUFNLFVBQVUsQ0FBQzs7QUFLOUIsTUFBTSxPQUFPLHNCQUFzQjtJQUhuQztRQUlTLFdBQU0sR0FBRyxFQUFFLENBQUM7S0FDcEI7Ozs7WUFMQSxVQUFVLFNBQUM7Z0JBQ1YsVUFBVSxFQUFFLE1BQU07YUFDbkI7O0FBUUQsTUFBTSxPQUFPLGdCQUFnQjtJQUczQixZQUF3QixNQUErQjtRQUNyRCxJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztJQUN2QixDQUFDO0lBRUQsSUFBSSxNQUFNO1FBQ1IsT0FBTyxJQUFJLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ3hDLENBQUM7Ozs7WUFaRixVQUFVLFNBQUM7Z0JBQ1YsVUFBVSxFQUFFLE1BQU07YUFDbkI7OztZQUlrQyxzQkFBc0IsdUJBQTFDLFFBQVE7O0FBU3ZCLE1BQU0sQ0FBQyxNQUFNLHVCQUF1QixHQUFHLENBQUMsTUFBd0IsRUFBMEIsRUFBRTs7SUFDMUYsT0FBTztRQUNMLE1BQU0sUUFBRSxNQUFNLENBQUMsTUFBTSxtQ0FBSSxFQUFFO0tBQzVCLENBQUM7QUFDSixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlLCBPcHRpb25hbCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBOZ3hFZGl0b3JDb25maWd9IGZyb20gJy4vdHlwZXMnO1xuaW1wb3J0IExvY2FscyBmcm9tICcuL0xvY2Fscyc7XG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXG59KVxuZXhwb3J0IGNsYXNzIE5neEVkaXRvclNlcnZpY2VDb25maWcge1xuICBwdWJsaWMgbG9jYWxzID0ge307XG59XG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXG59KVxuZXhwb3J0IGNsYXNzIE5neEVkaXRvclNlcnZpY2Uge1xuICBjb25maWc6IE5neEVkaXRvclNlcnZpY2VDb25maWc7XG5cbiAgY29uc3RydWN0b3IoQE9wdGlvbmFsKCkgY29uZmlnPzogTmd4RWRpdG9yU2VydmljZUNvbmZpZykge1xuICAgIHRoaXMuY29uZmlnID0gY29uZmlnO1xuICB9XG5cbiAgZ2V0IGxvY2FscygpOiBMb2NhbHMge1xuICAgIHJldHVybiBuZXcgTG9jYWxzKHRoaXMuY29uZmlnLmxvY2Fscyk7XG4gIH1cbn1cblxuZXhwb3J0IGNvbnN0IHByb3ZpZGVNeVNlcnZpY2VPcHRpb25zID0gKGNvbmZpZz86IE5neEVkaXRvckNvbmZpZyk6IE5neEVkaXRvclNlcnZpY2VDb25maWcgPT4ge1xuICByZXR1cm4ge1xuICAgIGxvY2FsczogY29uZmlnLmxvY2FscyA/PyB7fVxuICB9O1xufTtcbiJdfQ==