import { DOMSerializer, DOMParser } from 'prosemirror-model';
import defaultSchema from './schema';
export const emptyDoc = {
    type: 'doc',
    content: [
        {
            type: 'paragraph',
        }
    ],
};
// https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment
export const toHTML = (json, inputSchema) => {
    const schema = inputSchema !== null && inputSchema !== void 0 ? inputSchema : defaultSchema;
    const contentNode = schema.nodeFromJSON(json);
    const html = DOMSerializer.fromSchema(schema).serializeFragment(contentNode.content);
    const div = document.createElement('div');
    div.appendChild(html);
    return div.innerHTML;
};
export const toDoc = (html, inputSchema) => {
    const schema = inputSchema !== null && inputSchema !== void 0 ? inputSchema : defaultSchema;
    const el = document.createElement('div');
    el.innerHTML = html;
    return DOMParser.fromSchema(schema).parse(el).toJSON();
};
export const parseContent = (value, schema) => {
    if (!value) {
        return schema.nodeFromJSON(emptyDoc);
    }
    if (typeof value !== 'string') {
        return schema.nodeFromJSON(value);
    }
    const docJson = toDoc(value, schema);
    return schema.nodeFromJSON(docJson);
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFyc2Vycy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9saWIvcGFyc2Vycy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsYUFBYSxFQUFVLFNBQVMsRUFBMkIsTUFBTSxtQkFBbUIsQ0FBQztBQUU5RixPQUFPLGFBQWEsTUFBTSxVQUFVLENBQUM7QUFFckMsTUFBTSxDQUFDLE1BQU0sUUFBUSxHQUFHO0lBQ3RCLElBQUksRUFBRSxLQUFLO0lBQ1gsT0FBTyxFQUFFO1FBQ1A7WUFDRSxJQUFJLEVBQUUsV0FBVztTQUNsQjtLQUNGO0NBQ0YsQ0FBQztBQUVGLG9FQUFvRTtBQUNwRSxNQUFNLENBQUMsTUFBTSxNQUFNLEdBQUcsQ0FBQyxJQUF5QixFQUFFLFdBQW9CLEVBQVUsRUFBRTtJQUNoRixNQUFNLE1BQU0sR0FBRyxXQUFXLGFBQVgsV0FBVyxjQUFYLFdBQVcsR0FBSSxhQUFhLENBQUM7SUFFNUMsTUFBTSxXQUFXLEdBQUcsTUFBTSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUM5QyxNQUFNLElBQUksR0FBRyxhQUFhLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFDLGlCQUFpQixDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUVyRixNQUFNLEdBQUcsR0FBRyxRQUFRLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQzFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDdEIsT0FBTyxHQUFHLENBQUMsU0FBUyxDQUFDO0FBQ3ZCLENBQUMsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLEtBQUssR0FBRyxDQUFDLElBQVksRUFBRSxXQUFvQixFQUF1QixFQUFFO0lBQy9FLE1BQU0sTUFBTSxHQUFHLFdBQVcsYUFBWCxXQUFXLGNBQVgsV0FBVyxHQUFJLGFBQWEsQ0FBQztJQUU1QyxNQUFNLEVBQUUsR0FBRyxRQUFRLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3pDLEVBQUUsQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDO0lBRXBCLE9BQU8sU0FBUyxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLENBQUMsTUFBTSxFQUFFLENBQUM7QUFDekQsQ0FBQyxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sWUFBWSxHQUFHLENBQUMsS0FBMEMsRUFBRSxNQUFjLEVBQW1CLEVBQUU7SUFDMUcsSUFBSSxDQUFDLEtBQUssRUFBRTtRQUNWLE9BQU8sTUFBTSxDQUFDLFlBQVksQ0FBQyxRQUFRLENBQUMsQ0FBQztLQUN0QztJQUVELElBQUksT0FBTyxLQUFLLEtBQUssUUFBUSxFQUFFO1FBQzdCLE9BQU8sTUFBTSxDQUFDLFlBQVksQ0FBQyxLQUFLLENBQUMsQ0FBQztLQUNuQztJQUVELE1BQU0sT0FBTyxHQUFHLEtBQUssQ0FBQyxLQUFLLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDckMsT0FBTyxNQUFNLENBQUMsWUFBWSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0FBQ3RDLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERPTVNlcmlhbGl6ZXIsIFNjaGVtYSwgRE9NUGFyc2VyLCBOb2RlIGFzIFByb3NlbWlycm9yTm9kZSB9IGZyb20gJ3Byb3NlbWlycm9yLW1vZGVsJztcblxuaW1wb3J0IGRlZmF1bHRTY2hlbWEgZnJvbSAnLi9zY2hlbWEnO1xuXG5leHBvcnQgY29uc3QgZW1wdHlEb2MgPSB7XG4gIHR5cGU6ICdkb2MnLFxuICBjb250ZW50OiBbXG4gICAge1xuICAgICAgdHlwZTogJ3BhcmFncmFwaCcsXG4gICAgfVxuICBdLFxufTtcblxuLy8gaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0RvY3VtZW50RnJhZ21lbnRcbmV4cG9ydCBjb25zdCB0b0hUTUwgPSAoanNvbjogUmVjb3JkPHN0cmluZywgYW55PiwgaW5wdXRTY2hlbWE/OiBTY2hlbWEpOiBzdHJpbmcgPT4ge1xuICBjb25zdCBzY2hlbWEgPSBpbnB1dFNjaGVtYSA/PyBkZWZhdWx0U2NoZW1hO1xuXG4gIGNvbnN0IGNvbnRlbnROb2RlID0gc2NoZW1hLm5vZGVGcm9tSlNPTihqc29uKTtcbiAgY29uc3QgaHRtbCA9IERPTVNlcmlhbGl6ZXIuZnJvbVNjaGVtYShzY2hlbWEpLnNlcmlhbGl6ZUZyYWdtZW50KGNvbnRlbnROb2RlLmNvbnRlbnQpO1xuXG4gIGNvbnN0IGRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICBkaXYuYXBwZW5kQ2hpbGQoaHRtbCk7XG4gIHJldHVybiBkaXYuaW5uZXJIVE1MO1xufTtcblxuZXhwb3J0IGNvbnN0IHRvRG9jID0gKGh0bWw6IHN0cmluZywgaW5wdXRTY2hlbWE/OiBTY2hlbWEpOiBSZWNvcmQ8c3RyaW5nLCBhbnk+ID0+IHtcbiAgY29uc3Qgc2NoZW1hID0gaW5wdXRTY2hlbWEgPz8gZGVmYXVsdFNjaGVtYTtcblxuICBjb25zdCBlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICBlbC5pbm5lckhUTUwgPSBodG1sO1xuXG4gIHJldHVybiBET01QYXJzZXIuZnJvbVNjaGVtYShzY2hlbWEpLnBhcnNlKGVsKS50b0pTT04oKTtcbn07XG5cbmV4cG9ydCBjb25zdCBwYXJzZUNvbnRlbnQgPSAodmFsdWU6IHN0cmluZyB8IFJlY29yZDxzdHJpbmcsIGFueT4gfCBudWxsLCBzY2hlbWE6IFNjaGVtYSk6IFByb3NlbWlycm9yTm9kZSA9PiB7XG4gIGlmICghdmFsdWUpIHtcbiAgICByZXR1cm4gc2NoZW1hLm5vZGVGcm9tSlNPTihlbXB0eURvYyk7XG4gIH1cblxuICBpZiAodHlwZW9mIHZhbHVlICE9PSAnc3RyaW5nJykge1xuICAgIHJldHVybiBzY2hlbWEubm9kZUZyb21KU09OKHZhbHVlKTtcbiAgfVxuXG4gIGNvbnN0IGRvY0pzb24gPSB0b0RvYyh2YWx1ZSwgc2NoZW1hKTtcbiAgcmV0dXJuIHNjaGVtYS5ub2RlRnJvbUpTT04oZG9jSnNvbik7XG59O1xuIl19