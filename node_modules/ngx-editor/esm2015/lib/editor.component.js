import { Component, ViewChild, forwardRef, ViewEncapsulation, Output, EventEmitter, Input, Renderer2, } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { toHTML } from './parsers';
export class NgxEditorComponent {
    constructor(renderer) {
        this.renderer = renderer;
        this.placeholder = 'Type Here...';
        this.enabled = true;
        this.focusOut = new EventEmitter();
        this.focusIn = new EventEmitter();
        this.subscriptions = [];
        this.onChange = () => { };
        this.onTouched = () => { };
    }
    writeValue(value) {
        if (!this.outputFormat && typeof value === 'string') {
            this.outputFormat = 'html';
        }
        this.editor.setContent(value);
    }
    registerOnChange(fn) {
        this.onChange = fn;
    }
    registerOnTouched(fn) {
        this.onTouched = fn;
    }
    handleChange(jsonDoc) {
        if (this.outputFormat === 'html') {
            const html = toHTML(jsonDoc, this.editor.schema);
            this.onChange(html);
            return;
        }
        this.onChange(jsonDoc);
    }
    ngOnInit() {
        if (!this.editor) {
            throw new Error('NgxEditor: Required editor instance');
        }
        if (this.enabled) {
            this.editor.enable();
        }
        else {
            this.editor.disable();
        }
        this.editor.setPlaceholder(this.placeholder);
        this.renderer.appendChild(this.ngxEditor.nativeElement, this.editor.el);
        const contentChangeSubscription = this.editor.onContentChange.subscribe(jsonDoc => {
            this.handleChange(jsonDoc);
        });
        const blurSubscription = this.editor.onBlur.subscribe(() => {
            this.focusOut.emit();
            this.onTouched();
        });
        const focusScbscription = this.editor.onFocus.subscribe(() => {
            this.focusIn.emit();
        });
        this.subscriptions.push(contentChangeSubscription, blurSubscription, focusScbscription);
    }
    ngOnChanges(changes) {
        if ((changes === null || changes === void 0 ? void 0 : changes.placeholder) && !changes.placeholder.isFirstChange()) {
            this.editor.setPlaceholder(changes.placeholder.currentValue);
        }
        if ((changes === null || changes === void 0 ? void 0 : changes.editable) && !changes.editable.isFirstChange()) {
            if (!changes.editable.currentValue) {
                this.editor.disable();
            }
            else {
                this.editor.enable();
            }
        }
    }
    ngOnDestroy() {
        this.subscriptions.forEach(subscription => {
            subscription.unsubscribe();
        });
        this.editor.destroy();
    }
}
NgxEditorComponent.decorators = [
    { type: Component, args: [{
                selector: 'ngx-editor',
                template: "<div class=\"NgxEditor\" #ngxEditor>\n  <ngx-bubble [editor]=\"editor\"></ngx-bubble>\n</div>\n",
                providers: [{
                        provide: NG_VALUE_ACCESSOR,
                        useExisting: forwardRef(() => NgxEditorComponent),
                        multi: true
                    }],
                encapsulation: ViewEncapsulation.None,
                styles: [".NgxEditor{background:#fff;background-clip:padding-box;border:1px solid rgba(0,0,0,.2);border-radius:4px;color:#000;overflow:hidden;position:relative}.NgxEditor--Disabled{opacity:.5;pointer-events:none}.NgxEditor__Placeholder{-moz-user-select:none;-ms-user-select:none;-webkit-user-select:none;color:#6c757d;cursor:text;opacity:1;position:absolute;user-select:none}.NgxEditor__Content{font-feature-settings:\"liga\" 0;font-variant-ligatures:none;outline:none;padding:.5rem;white-space:pre-wrap}.NgxEditor__Content p{margin:0 0 .7rem}.NgxEditor__Content blockquote{border-left:3px solid #ddd;margin-left:0;margin-right:0;padding-left:1rem}.NgxEditor__Content--Disabled{-moz-user-select:none;-ms-user-select:none;-webkit-user-select:none;pointer-events:none;user-select:none}.NgxEditor__ImageWrapper{display:inline-block;line-height:0;padding:2px;position:relative}.NgxEditor__ImageWrapper.NgxEditor__Resizer--Active{border:1px solid #1a73e8;padding:1px}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle{display:none;height:100%;position:absolute;width:100%}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--BL,.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--BR,.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--TL,.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--TR{background-color:#1a73e8;border:1px solid #fff;height:7px;position:absolute;width:7px}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--BR{bottom:-5px;cursor:se-resize;right:-5px}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--TR{cursor:ne-resize;right:-5px;top:-5px}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--TL{cursor:nw-resize;left:-5px;top:-5px}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--BL{bottom:-5px;cursor:sw-resize;left:-5px}.NgxEditor__Wrapper{border:1px solid rgba(0,0,0,.4);border-radius:4px}.NgxEditor__Wrapper .NgxEditor__MenuBar{border-bottom:1px solid rgba(0,0,0,.2);border-top-left-radius:4px;border-top-right-radius:4px}.NgxEditor__Wrapper .NgxEditor{border:none;border-top-left-radius:0;border-top-right-radius:0}"]
            },] }
];
NgxEditorComponent.ctorParameters = () => [
    { type: Renderer2 }
];
NgxEditorComponent.propDecorators = {
    ngxEditor: [{ type: ViewChild, args: ['ngxEditor', { static: true },] }],
    editor: [{ type: Input }],
    outputFormat: [{ type: Input }],
    placeholder: [{ type: Input }],
    enabled: [{ type: Input }],
    focusOut: [{ type: Output }],
    focusIn: [{ type: Output }]
};
//# sourceMappingURL=data:application/json;base64,